services:

  valkey:
    image: valkey/valkey:8
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    ports:
      - "6379:6379"
    volumes:
      - valkey_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  demo_app_dataset:
    image: dbazhenov/demo_app_dataset:0.1.8
    depends_on:
      valkey:
        condition: service_healthy
    environment:
      - VALKEY_ADDR=valkey 
      - VALKEY_PORT=6379
      - DATASET_LOAD_TYPE=csv # github or csv
      - DATASET_DEMO_CSV_PULLS=data/csv/pulls.csv # https://github.com/dbazhenov/github-stat/raw/refs/heads/main/data/csv/pulls.csv.zip
      - DATASET_DEMO_CSV_REPOS=data/csv/repositories.csv # https://github.com/dbazhenov/github-stat/raw/refs/heads/main/data/csv/repositories.csv.zip
      - GITHUB_ORG=percona # required for github load type
      - GITHUB_TOKEN= # required for github load type
      - DELAY_MINUTES=10
      - DEBUG=false

  demo_app_web:
    image: dbazhenov/demo_app_web:0.1.8
    depends_on:
      valkey:
        condition: service_healthy
    environment:
      - VALKEY_ADDR=valkey 
      - VALKEY_PORT=6379
      - CONTROL_PANEL_PORT=3000
    ports:
      - "3000:3000"

  demo_app_load:
    image: dbazhenov/demo_app_load:0.1.8
    depends_on:
      valkey:
        condition: service_healthy
    environment:
      - VALKEY_ADDR=valkey
      - VALKEY_PORT=6379
      - LOAD_MYSQL=true
      - LOAD_POSTGRES=true
      - LOAD_MONGODB=true
      
  postgres:
    image: "percona/percona-distribution-postgresql:16.2-multi"
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_USER: postgres
      LANG: en_US.utf8
      PGDATA: /data/db
    volumes:
      - pgdata:/data/db
      - ./data/init/postgresql/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports: 
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 5

  yugabytedb:
    image: "yugabytedb/yugabyte:2024.2.0.0-b145"
    command: yugabyted start --enable_pg_parity_early_access --tserver_flags="ysql_pg_conf_csv={shared_preload_libraries='pg_stat_monitor'}" --initial_scripts_dir=/docker-entrypoint-initial_scripts_dir --background=false 
    environment:
      YSQL_PASSWORD: password
      YSQL_USER: yugabyte
    volumes:
       - ./data/init/postgresql:/docker-entrypoint-initial_scripts_dir
    ports: 
      - "5433:5433"
      - "15433:15433"
    healthcheck:
      test: ["CMD-SHELL", "PGPASSWORD=$$YSQL_PASSWORD yugabyted connect ysql <<<''"]
      interval: 30s
      timeout: 10s
      retries: 5

  mongodb:
    image: "percona/percona-server-mongodb:7.0-multi"
    volumes:
      - mongodata:/data/db
      - ./data/init/mongodb/init.js:/docker-entrypoint-initdb.d/init.js:ro
    environment:
      MONGO_INITDB_ROOT_USERNAME: databaseAdmin
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: dataset
    ports:
      - "27017:27017"
    healthcheck:
      test: ["CMD-SHELL", "mongosh --eval 'db.adminCommand(\"ping\")' --quiet"]
      interval: 30s
      timeout: 10s
      retries: 5

  mysql:
    image: "percona/percona-server:8.3.0-1.1-multi"
    volumes:
      - mysqldata:/var/lib/mysql
      - ./data/init/mysql:/docker-entrypoint-initdb.d
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: dataset
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-proot-password"]
      interval: 5s
      timeout: 5s
      retries: 20
    ports:
      - "3306:3306"
    command: >
      --performance-schema --innodb_monitor_enable=all
      --slow_query_log --slow_query_log_file=/mysql/slowlogs/slow.log --long_query_time=0

  pmm-server:
    image: percona/pmm-server:2
    platform: "linux/amd64"
    container_name: pmm-server
    restart: always
    ports:
      - 8080:80
      - 443:443
    volumes:
      - pmm-data:/srv
    environment:
      - DISABLE_TELEMETRY=0
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  pmm-client:
    image: percona/pmm-client:2
    platform: "linux/amd64"
    container_name: pmm-client
    depends_on:
      pmm-server:
        condition: service_healthy
      mysql:
        condition: service_healthy
      postgres:
        condition: service_healthy
      mongodb:
        condition: service_healthy
    environment:
      PMM_AGENT_SERVER_ADDRESS: pmm-server
      PMM_AGENT_SERVER_USERNAME: admin
      PMM_AGENT_SERVER_PASSWORD: admin
      PMM_AGENT_SERVER_INSECURE_TLS: 1
      PMM_AGENT_CONFIG_FILE: config/pmm-agent.yaml
      PMM_AGENT_SETUP: 1
      PMM_AGENT_SETUP_FORCE: 1
      PMM_AGENT_PRERUN_SCRIPT: >
        pmm-admin status --wait=10s &&
        pmm-admin add mysql --query-source=perfschema --username=root --password=password --host=mysql --port=3306 &&
        pmm-admin add postgresql --username=postgres --password=password --host=postgres --port=5432 --query-source=pgstatmonitor &&
        pmm-admin add mongodb --username=databaseAdmin --password=password --host=mongodb --port=27017 --query-source=profiler

volumes:
  pmm-data:
  mongodata:
  pgdata:
  mysqldata:
  valkey_data:
